# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-06-16 14:53
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='员工姓名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_staff', models.BooleanField(default=False, verbose_name='是否为管理员')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工',
                'verbose_name_plural': '员工',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='用户名')),
                ('code', models.CharField(default='nonu', max_length=8, verbose_name='验证码')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否激活')),
                ('password', models.CharField(max_length=30, verbose_name='密码')),
                ('phone_num', models.CharField(max_length=11, null=True, verbose_name='电话号码')),
                ('money', models.DecimalField(decimal_places=2, default=0.0, max_digits=11, verbose_name='余额')),
                ('birthday', models.DateField(null=True, verbose_name='出身日期')),
                ('hobby', models.CharField(max_length=10, null=True, verbose_name='喜好书籍类型')),
                ('say', models.CharField(max_length=200, null=True, verbose_name='格言')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
        ),
    ]
